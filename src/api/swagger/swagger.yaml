swagger: "2.0"
info:
  version: "0.0.2"
  title: Docker Swarm UI
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /nodes:
    # binds a127 app logic to a route
    x-swagger-router-controller: nodes.controller
    get:
      description: Returns the nodes in the cluster
      operationId: nodes
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Nodes"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /services:
    x-swagger-router-controller: services.controller
    get:
      description: Returns the services registered in the cluster
      operationId: services
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Services"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /tasks:
    x-swagger-router-controller: tasks.controller
    get:
      description: Return the tasks running on the cluster
      operationId: tasks
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Tasks"
            
    
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Node:
    properties:
      id:
        type: string
      hostName:
        type: string
      membership:
        type: string
      status:
        type: string
      availability:
        type: string
      isManager:
        type: boolean
  Service:
    properties:
      id:
        type: string
      name:
        type: string
      currentReplicas:
        type: integer
      replicas:
        type: integer
      image:
        type: string
      command:
        type: string
  Task:
    properties:
      id:
        type: string
      name:
        type: string
      service:
        type: string
      image:
        type: string
      lastState:
        type: string
      desiredState:
        type: string
      node:
        type: string
  Nodes:
    type: array
    items:
      $ref: "#/definitions/Node"
  Services:
    type: array
    items:
      $ref: "#/definitions/Service"
  Tasks:
    type: array
    items:
      $ref: "#/definitions/Task"
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
